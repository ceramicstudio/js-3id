import { createModelManager } from '@3id/model-manager'
import { CeramicClient } from '@ceramicnetwork/http-client'
import { writeFile } from 'node:fs/promises'
import prettierConfig from 'eslint-config-3box/prettier.config.js'
import prettier from 'prettier'

const ceramic = new CeramicClient(process.env.CERAMIC_URL)
const manager = createModelManager(ceramic)

const aliases = await manager.deploy()
const modelFile = prettier.format(
  `// This is a file generated by the deploy-model.mjs script, do not edit manually

import type { CryptoAccountLinks } from '@datamodels/identity-accounts-crypto'
import type { AlsoKnownAs } from '@datamodels/identity-accounts-web'
import type { BasicProfile } from '@datamodels/identity-profile-basic'
import type { ThreeIdKeychain } from '@datamodels/3id-keychain'
import type { ModelAliases, ModelTypeAliases } from '@glazed/types'

export type ModelTypes = ModelTypeAliases<
  {
    AlsoKnownAs: AlsoKnownAs
    BasicProfile: BasicProfile
    CryptoAccounts: CryptoAccountLinks
    ThreeIdKeychain: ThreeIdKeychain
  },
  {
    alsoKnownAs: 'AlsoKnownAs'
    basicProfile: 'BasicProfile'
    cryptoAccounts: 'CryptoAccounts'
    threeIdKeychain: 'ThreeIdKeychain'
  }
>

export const aliases: ModelAliases<ModelTypes> = ${JSON.stringify(aliases, null, 2)}
`,
  { ...prettierConfig, parser: 'typescript' }
)
await writeFile(new URL('../src/__generated__/model.ts', import.meta.url), modelFile)
